home.php:
<?php session_start();?>
<!doctype html>
<html lang="it">
<?php
include_once("header.php");
include ("menu.php");
?>
<body>
    <div class="grid-container">
        <div class="contenuto">
            <h1>Benvenuto in YourThought</h1>
            <p>Questo è un social network dove puoi condividere i tuoi pensieri. <a class="linkRegistrazione" href='registrazione.php'>Registrati</a> o effettua il <a class="linkLogin" href='login.php'>login</a> per iniziare!</p>
            <p>Dalla pagina di login potrai anche accedere senza autenticarti ma non potrai prender parte alle discussioni.</p>
            <img src="welcome.png" alt="Welcome Image">
        </div>    
    </div>
    <?php include_once("footer.php");?>
</body>
</html>

login.php:
<?php
session_start();
if (isset($_SESSION['username'])) {
    header("Location: bacheca.php");
    exit;
}
include 'database.php';

$last_successful_username = "";
if (isset($_COOKIE['last_successful_username'])) {
    $last_successful_username = $_COOKIE['last_successful_username'];
}

$errors = [];
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit'])) {
        $username = htmlspecialchars(trim($_POST['user']));
        $password = htmlspecialchars(trim($_POST['pwd']));

        // Verifica che l'username e la password non siano vuoti
        if (empty($username) || empty($password)) {
            $errors['login'] = "Inserire sia username che password.";
        } else {
            $conn = getDbConnection('normale');
            // Preparare e legare
            $stmt = $conn->prepare("SELECT pwd FROM utenti WHERE username = ?");
            if ($stmt) {
                $stmt->bind_param("s", $username);
                $stmt->execute();
                $stmt->store_result();

                if ($stmt->num_rows > 0) {
                    $stmt->bind_result($db_password);
                    $stmt->fetch();
                    if ($password === $db_password) {
                        // Imposta sessione e cookie
                        $_SESSION['username'] = $username;
                        setcookie('last_successful_username', $username, time() + 57600); // 16 ore
                        header("Location: bacheca.php");
                        exit;
                    } else {
                        $errors['login'] = "Username o password non corretti.";
                    }
                } else {
                    $errors['login'] = "Username o password non corretti.";
                }
                $stmt->close();
            } else {
                $errors['database'] = "Errore nella preparazione della query: " . $conn->error;
            }
            $conn->close();
        }
    }
}

if (isset($_POST['skip'])) {
    $_SESSION['guest'] = true;
    header("Location: scopri.php");
    exit;
}
?>

<!DOCTYPE html>
<html lang="it">
<?php include_once("header.php");?>
<body>
    <?php include 'menu.php'; ?>
    <div class="container">
        <h1>Login</h1>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div>
                <label for="user">Username:</label>
                <input type="text" id="user" name="user" value="<?php echo htmlspecialchars($last_successful_username, ENT_QUOTES); ?>">
            </div>
            <div>
                <label for="pwd">Password:</label>
                <input type="password" id="pwd" name="pwd">
            </div>
            <div>
                <button type="submit" name="submit">INVIA</button>
                <button type="reset">CANCELLA</button>
            </div>
            <div>
                <button type="submit" name="skip">Continua senza autenticarsi</button>
            </div>
            <?php
            if (isset($errors['login'])) {
                echo "<p class='error'>" . htmlspecialchars($errors['login'], ENT_QUOTES) . "</p>";
            }
            if (isset($errors['database'])) {
                echo "<p class='error'>" . htmlspecialchars($errors['database'], ENT_QUOTES) . "</p>";
            }
            ?>
        </form>
    </div>
    <?php include_once("footer.php");?>
</body>
</html>

registrazione.php:
<?php
include 'database.php';

function validate_input($data) {
    return htmlspecialchars(trim($data));
}

function validate_date($date) {
    // Match the pattern "aaaa-mm-gg" where leading zeroes in month and day can be omitted
    if (preg_match("/^\d{4}-\d{1,2}-\d{1,2}$/", $date, $matches)) {
        // Normalize the date to ensure "aaaa-mm-gg" format
        $date_parts = explode('-', $date);
        if (checkdate($date_parts[1], $date_parts[2], $date_parts[0])) {
            return sprintf('%04d-%02d-%02d', $date_parts[0], $date_parts[1], $date_parts[2]);
        }
    }
    return false;
}

$errors = [];
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $nome = validate_input($_POST['name']);
    $cognome = validate_input($_POST['surname']);
    $data = validate_input($_POST['birthdate']);
    $indirizzo = validate_input($_POST['address']);
    $username = validate_input($_POST['nick']);
    $password = validate_input($_POST['password']);

    // Validazione dei dati
    if (empty($nome)) {
        $errors['name'] = "Il nome è richiesto.";
    } else {
        if (!preg_match("/^[A-Z][a-zA-Z ]{1,11}$/", $nome)) {
            $errors['name'] = "Nome inserito non valido. Deve iniziare con una lettera maiuscola e contenere solo lettere e spazi (2-12 caratteri)";
        }
    }

    if (empty($cognome)) {
        $errors['surname'] = "Il cognome è richiesto.";
    } else {
        if (!preg_match("/^[A-Z][a-zA-Z ]{1,15}$/", $cognome)) {
            $errors['surname'] = "Cognome inserito non valido. Deve iniziare con una lettera maiuscola e contenere solo lettere e spazi (2-16 caratteri)";
        }
    }

    if (empty($data)) {
        $errors['birthdate'] = "La data di nascita è richiesta.";
    } else {
        $validated_date = validate_date($data);
        if (!$validated_date) {
            $errors['birthdate'] = "Data di nascita non valida. Formato richiesto: aaaa-mm-gg.";
        } else {
            $data = $validated_date;
        }
    }

    if (empty($indirizzo)) {
        $errors['address'] = "L'indirizzo è richiesto.";
    } else {
        if (!preg_match("/^(Via|Corso|Largo|Piazza|Vicolo) [a-zA-Z ]+ \d{1,4}$/", $indirizzo)) {
            $errors['address'] = "Indirizzo non valido. Formato richiesto: Via|Corso|Largo|Piazza|Vicolo nome numeroCivico.";
        }
    }

    if (empty($username)) {
        $errors['nick'] = "Lo username è richiesto.";
    } else {
        if (!preg_match("/^[a-zA-Z][a-zA-Z0-9-_]{3,9}$/", $username)) {
            $errors['nick'] = "Username non valido. Deve iniziare con una lettera e può contenere lettere, numeri, '-' o '_'. (4-10 caratteri)";
        }
    }

    if (empty($password)) {
        $errors['password'] = "La password è richiesta.";
    } else {
        if (!preg_match("/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d.*\d)(?=.*[#?!@%^&*+=]).{8,16}$/", $password)) {
            $errors['password'] = "Password non valida. Deve contenere almeno 1 lettera maiuscola, 1 lettera minuscola, 2 numeri e 1 carattere speciale (#!?@%^&*+=), lunghezza tra 8 e 16 caratteri.";
        }
    }

    // Inserimento nel database
    if (empty($errors)) {
        $conn = getDbConnection('privilegiato');
        
        // Imposta il set di caratteri a utf8mb4
        mysqli_set_charset($conn, 'utf8mb4');

        $stmt = $conn->prepare("INSERT INTO utenti (nome, cognome, data, indirizzo, username, pwd) VALUES (?, ?, ?, ?, ?, ?)");
        if ($stmt === false) {
            $errors['database'] = "Errore durante la preparazione della query: " . $conn->error;
        } else {
            $stmt->bind_param("ssssss", $nome, $cognome, $data, $indirizzo, $username, $password);

            if ($stmt->execute()) {
                header("Location: login.php");
                exit;
            } else {
                $errors['database'] = "Errore durante la registrazione: " . $stmt->error;
            }

            $stmt->close();
        }
        $conn->close();
    }
}
?>

<!DOCTYPE html>
<html lang="it">
<?php include_once("header.php"); ?>
<body>
    <?php include 'menu.php'; ?>
    <h1>Registrazione</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="name">Nome:</label>
            <input type="text" id="name" name="name" value="<?php echo htmlspecialchars($nome ?? '', ENT_QUOTES); ?>">
            <span class="error"><?php echo $errors['name'] ?? ''; ?></span>
        </div>
        <div>
            <label for="surname">Cognome:</label>
            <input type="text" id="surname" name="surname" value="<?php echo htmlspecialchars($cognome ?? '', ENT_QUOTES); ?>">
            <span class="error"><?php echo $errors['surname'] ?? ''; ?></span>
        </div>
        <div>
            <label for="birthdate">Data di Nascita:</label>
            <input type="text" id="birthdate" name="birthdate" placeholder="aaaa-mm-gg" value="<?php echo htmlspecialchars($data ?? '', ENT_QUOTES); ?>">
            <span class="error"><?php echo $errors['birthdate'] ?? ''; ?></span>
        </div>
        <div>
            <label for="address">Indirizzo:</label>
            <input type="text" id="address" name="address" value="<?php echo htmlspecialchars($indirizzo ?? '', ENT_QUOTES); ?>">
            <span class="error"><?php echo $errors['address'] ?? ''; ?></span>
        </div>
        <div>
            <label for="nick">Username:</label>
            <input type="text" id="nick" name="nick" value="<?php echo htmlspecialchars($username ?? '', ENT_QUOTES); ?>">
            <span class="error"><?php echo $errors['nick'] ?? ''; ?></span>
        </div>
        <div>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password">
            <span class="error"><?php echo $errors['password'] ?? ''; ?></span>
        </div>
        <div>
            <button type="submit">Registrati</button>
        </div>
    </form>

    <?php include_once("footer.php"); ?>
</body>
</html>

bacheca.php:
<?php
include 'database.php';
session_start();

if (!isset($_SESSION['username'])) {
    include ("errore.php");
    exit;
    
}

$conn = getDbConnection('normale');
mysqli_set_charset($conn, "utf8");

$username = $_SESSION['username'];
$sql = "SELECT username, data, testo FROM tweets WHERE username = ? ORDER BY data DESC";
$stmt = $conn->prepare($sql);

$startDate = $_POST['start_date'] ?? '';
$endDate = $_POST['end_date'] ?? '';
$tweets = [];

if ($startDate && $endDate) {
    $stmt = $conn->prepare("SELECT username, data, testo FROM tweets WHERE username = ? and data BETWEEN ? AND ? ORDER BY data DESC");
    $stmt->bind_param("sss", $username, $startDate, $endDate);
} else {
    $stmt = $conn->prepare("SELECT username, data, testo FROM tweets WHERE username = ? ORDER BY data DESC");
    $stmt->bind_param("s", $username);
}

$stmt->execute();
$result = $stmt->get_result();
while ($row = $result->fetch_assoc()) {
    $tweets[] = $row;
}
$stmt->close();
$conn->close();
?>

<!DOCTYPE html>
<html lang="it">
<?php include_once("header.php");?>
<body>
    <?php include 'menu.php'; ?>
    <h1>Bacheca di <?php echo htmlspecialchars($username, ENT_QUOTES);?></h1>
    <form method="post" action="bacheca.php" class="filter-form">
        <label for="start_date">Data Inizio:</label>
        <input type="date" id="start_date" name="start_date" value="<?php echo htmlspecialchars($startDate, ENT_QUOTES); ?>">
        <label for="end_date">Data Fine:</label>
        <input type="date" id="end_date" name="end_date" value="<?php echo htmlspecialchars($endDate, ENT_QUOTES); ?>">
        <button type="submit">Filtra</button>
    </form>
    <?php if (empty($tweets)): ?>
        <p>Non ci sono tweet da visualizzare. Clicca <a href="scrivi.php">qui</a> per aggiungere un tweet</p>
    <?php else: ?>
        <?php foreach ($tweets as $tweet): ?>
            <div class="tweet">
                <p class="author"><?php echo htmlspecialchars($tweet['username'], ENT_QUOTES); ?></p>
                <p class="date"><?php echo htmlspecialchars($tweet['data'], ENT_QUOTES); ?></p>
                <p><?php echo htmlspecialchars($tweet['testo'], ENT_QUOTES); ?></p>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>
    <?php include_once("footer.php");?>
</body>
</html>

database.php:
<?php
if (!function_exists('getDbConnection')) {
    function getDbConnection($userType) {
        $servername = $_SERVER['SERVER_ADDR'];
        $dbname = "social_network";

        // Imposta le credenziali in base al tipo di utente
        if ($userType == 'normale') {
            $username = "normale";
            $password = "posso_leggere?";
        } elseif ($userType == 'privilegiato') {
            $username = "privilegiato";
            $password = "SuperPippo!!!";
        } else {
            die("Tipo di utente non valido.");
        }

        // Crea la connessione
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Verifica la connessione
        if ($conn->connect_error) {
            die("Connessione fallita: " . $conn->connect_error);
        }

        return $conn;
    }
}
?>

errore.php:
<!DOCTYPE html>
    <html lang='it'>
    <?php include('header.php');?>
    <body>
        <p class='error'>Identità non verificata. Per favore, autenticati prima.</p>
        <p class='error'> <a href='registrazione.php'>Registrati</a> o effettua il <a href='login.php'>login</a></p>
    </body>
    </html>

footer.php:
<footer class="footer" data-url="<?php echo 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; ?>">
    <div class="file-info">
        <br><?php echo basename($_SERVER['PHP_SELF']); ?><br>
        <i>© 2024 Daniele Saccuman. Tutti i diritti riservati.</i>
    </div>
</footer>

header.php:
<head>
    <meta charset="UTF-8">
    <meta name="Author" content="D. Saccuman">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="styles.css">
    <link rel="icon" type="images/png" href="favicon.png">
    <title>YourThought</title>
</head>

logout.php:
<?php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit;
?>

menu.php:
<nav>
    <?php
    if (isset($_SESSION['username'])) {
        include 'database.php';
        $conn = getDbConnection('normale');
        mysqli_set_charset($conn, "utf8");

        $stmt = $conn->prepare("SELECT testo FROM tweets WHERE username = ? ORDER BY data DESC LIMIT 1");
        $stmt->bind_param("s", $_SESSION['username']);
        $stmt->execute();
        $stmt->bind_result($last_tweet);

        echo '<div class="user-info">';
        echo "<p>Utente: " . htmlspecialchars($_SESSION['username'], ENT_QUOTES);
        if ($stmt->fetch()) {
            echo "<br>Ultimo tweet: " . htmlspecialchars(substr($last_tweet, 0, 30), ENT_QUOTES);
        }
        echo "</p>";
        echo '</div>';

        $stmt->close();
        $conn->close();
    }
    ?>
    <ul>
        <li><a href="home.php">HOME</a></li>
        <li><a href="registrazione.php">REGISTRATI</a></li>
        <li><a href="scrivi.php" <?php if (!isset($_SESSION['username'])) echo 'class="disabled"'; ?>>SCRIVI</a></li>
        <li><a href="bacheca.php" <?php if (!isset($_SESSION['username'])) echo 'class="disabled"'; ?>>BACHECA</a></li>
        <li><a href="login.php" <?php if (!isset($_SESSION['username'])) echo 'class="disabled"'; ?>>LOGIN</a></li>
        <li><a href="scopri.php">SCOPRI</a></li>
        <?php if (isset($_SESSION['username'])): ?>
            <li><a href="logout.php">LOGOUT</a></li>
        <?php endif; ?>
    </ul>
</nav>

scopri.php:
<?php
include 'database.php';

$conn = getDbConnection('normale');

// Imposta il set di caratteri a utf8mb4
mysqli_set_charset($conn, 'utf8mb4');

$tweets = [];
$query = "SELECT username, data, testo FROM tweets ORDER BY data DESC";
$result = $conn->query($query);

while ($row = $result->fetch_assoc()) {
    $tweets[] = $row;
}

$conn->close();
?>
<?php session_start();?>
<!doctype html>
<html lang="it">
<?php
include_once("header.php");
include 'menu.php';
?>
<body>
    <h1>Scopri i pensieri</h1>
    <?php if (empty($tweets)): ?>
        <p>Non ci sono pensieri da visualizzare.</p>
    <?php else: ?>
        <?php foreach ($tweets as $tweet): ?>
            <div class="tweet">
                <p class="author"><?php echo htmlspecialchars($tweet['username'], ENT_QUOTES); ?></p>
                <p class="date"><?php echo htmlspecialchars($tweet['data'], ENT_QUOTES); ?></p>
                <p><?php echo htmlspecialchars($tweet['testo'], ENT_QUOTES); ?></p>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>
    <?php include_once("footer.php");?>
</body>
</html>

scrivi.php:
<?php
session_start();
if (!isset($_SESSION['username'])) {
    include("errore.php");
    die();   
}

include 'database.php';

$errors = [];
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['submit'])) {
        $tweet = htmlspecialchars(trim($_POST['tweet']), ENT_QUOTES, 'UTF-8');
        $username = $_SESSION['username'];

        if (empty($tweet)) {
            $errors['tweet'] = "Il tweet non può essere vuoto.";
        } elseif (strlen($tweet) > 140) {
            $errors['tweet'] = "Il tweet non può superare i 140 caratteri.";
        } else {
            $conn = getDbConnection('privilegiato');
            $stmt = $conn->prepare("INSERT INTO tweets (username, data, testo) VALUES (?, NOW(), ?)");
            $stmt->bind_param("ss", $username, $tweet);

            if ($stmt->execute()) {
                header("Location: bacheca.php");
                exit;
            } else {
                $errors['database'] = "Errore durante l'inserimento del tweet: " . $stmt->error;
            }

            $stmt->close();
            $conn->close();
        }
    }
}
?>

<!DOCTYPE html>
<html lang="it">
<?php include_once("header.php");?>
<body>
    <?php include 'menu.php'; ?>
    <h1>Scrivi un nuovo Tweet</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div>
            <label for="tweet">Tweet:</label>
            <textarea id="tweet" name="tweet" maxlength="140"></textarea>
        </div>
        <div>
            <button type="submit" name="submit">INVIA</button>
        </div>
        <?php
        if (isset($errors['tweet'])) {
            echo "<p class='error'>" . htmlspecialchars($errors['tweet'], ENT_QUOTES) . "</p>";
        }
        if (isset($errors['database'])) {
            echo "<p class='error'>" . htmlspecialchars($errors['database'], ENT_QUOTES) . "</p>";
        }
        ?>
    </form>
    <?php include_once("footer.php");?>
</body>
</html>

styles.css:
body {
    font-family: 'Arial', sans-serif;
    font-size: 100%;
    color: blue;
    background-color: white;
    margin: 0;
    padding: 0;
    text-align: center;
    display: flex;
    flex-direction: column;
    min-height: 120vh;
}

.header, .footer {
    background-color: #f0f0f0;
    padding: 10px;
    text-align: center;
}

footer {
    color: blue;
    margin-top: auto;
    position: fixed;
    bottom: 0;
    width: 100%;
}

.error {
    color: red;
    font-weight: bold;
    font-size: 1.5em;
    text-align: center;
}

/* Navigation menu styling */
nav {
    background-color: blue;
    overflow: hidden;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

nav a {
    color: white;
    text-align: center;
    padding: 14px 20px;
    text-decoration: none;
    display: inline-block;
}

nav a:hover {
    background-color: #ddd;
    color: blue;
}

nav li {
    margin-right: 15px;
}

nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
}

.user-info {
    color: white;
    margin-right: 15px;
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
}

form div {
    margin-bottom: 15px;
    width: 100%;
    max-width: 300px;
}

label {
    display: block;
    text-align: center;
    margin-bottom: 5px;
}

input[type="text"],
input[type="password"],
input[type="date"] {
    width: 100%;
    padding: 8px;
    box-sizing: border-box;
}

button {
    background-color: blue;
    color: white;
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    margin-top: 10px;
}

button:hover {
    background-color: darkblue;
}

h1, h2 {
    color: blue;
    text-align: center;
}

.error {
    color: red;
    font-weight: bold;
    font-size: 1em;
    text-align: center;
}

.contenuto img {
    max-width: 100%;
    height: auto;
    margin-top: 20px;
}

@media (max-width: 600px) {
    body {
        font-size: 90%;
    }
    nav a {
        display: block;
        margin: 5px 0;
    }
    nav ul {
        flex-direction: column;
        align-items: center;
    }
}

@media print {
    body {
        font-family: 'Times New Roman', serif;
        font-size: 12pt;
        color: black;
        background-color: white;
    }

    nav, .no-print, .contenuto img {
        display: none;
    }

    a::after {
        content: " (" attr(href) ")";
        color: black;
    }

    @page {
        margin: 1cm;
    }

    footer::before {
        content: "Pagina stampata da: " attr(data-url);
        display: block;
        font-size: 10pt;
        margin-bottom: 10px;
        text-align: center;
    }

    footer::after {
        content: "© 2024 Daniele Saccuman. Tutti i diritti riservati.";
        display: block;
        font-size: 10pt;
        margin-top: 10px;
        text-align: center;
    }

    .footer .file-info {
        display: block;
        text-align: center;
        margin-top: 10px;
    }
}

.tweet {
    border: 1px solid #ccc;
    padding: 10px;
    margin: 10px 0;
    text-align: center;
}

.tweet .author {
    font-weight: bold;
    color: blue;
}

.tweet .date {
    color: gray;
}

.tweet p {
    color: black;
}

.container {
    width: 80%;
    margin: 0 auto;
    padding: 20px;
    text-align: center;
}

.filter-form {
    text-align: center;
    margin: 20px 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.filter-form label {
    margin: 0 10px;
}

.filter-form input[type="date"] {
    width: auto;
    padding: 5px;
    margin: 5px 10px;
}

.filter-form button {
    margin-left: 10px;
    padding: 5px 10px;
}